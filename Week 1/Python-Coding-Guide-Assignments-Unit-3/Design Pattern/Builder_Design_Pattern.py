'''
[Builder Design Pattern] Design a document generator using the Builder Design
Pattern. Create a DocumentBuilder that creates documents of various types (e.g., PDF,
HTML, Plain Text). Implement the builder methods to format the document content and
structure according to the chosen type. Demonstrate how the Builder Design Pattern
allows for the creation of different document formats without tightly coupling the
document generation logic.
'''

# DocumentBuilder interface
class DocumentBuilder:
    """Interface for building documents."""
    def create_header(self, text):
        """Create the header section of the document."""
        pass
    
    def create_body(self, text):
        """Create the body section of the document."""
        pass
    
    def create_footer(self, text):
        """Create the footer section of the document."""
        pass
    
    def get_result(self):
        """Get the final document."""
        pass

# PDFDocumentBuilder implementation
class PDFDocumentBuilder(DocumentBuilder):
    """Concrete builder for creating PDF documents."""
    def __init__(self):
        self.pdf_content = ""

    def create_header(self, text):
        self.pdf_content += f"<pdf-header>{text}</pdf-header>\n"

    def create_body(self, text):
        self.pdf_content += f"<pdf-body>{text}</pdf-body>\n"

    def create_footer(self, text):
        self.pdf_content += f"<pdf-footer>{text}</pdf-footer>\n"

    def get_result(self):
        return self.pdf_content

# HTMLDocumentBuilder implementation
class HTMLDocumentBuilder(DocumentBuilder):
    """Concrete builder for creating HTML documents."""
    def __init__(self):
        self.html_content = ""

    def create_header(self, text):
        self.html_content += f"<html><head><title>{text}</title></head><body>\n"

    def create_body(self, text):
        self.html_content += f"<p>{text}</p>\n"

    def create_footer(self, text):
        self.html_content += f"<footer>{text}</footer>\n</body></html>"

    def get_result(self):
        return self.html_content

# PlainTextDocumentBuilder implementation
class PlainTextDocumentBuilder(DocumentBuilder):
    """Concrete builder for creating plain text documents."""
    def __init__(self):
        self.plain_text_content = ""

    def create_header(self, text):
        self.plain_text_content += f"----- {text} -----\n"

    def create_body(self, text):
        self.plain_text_content += f"{text}\n"

    def create_footer(self, text):
        self.plain_text_content += f"---------------\n{text}\n"

    def get_result(self):
        return self.plain_text_content

# DocumentDirector class for building documents
class DocumentDirector:
    """Director for constructing documents using a builder."""
    def __init__(self, builder):
        self.builder = builder

    def build_document(self, header, body, footer):
        """Build a document using the given header, body, and footer."""
        self.builder.create_header(header)
        self.builder.create_body(body)
        self.builder.create_footer(footer)

    def get_document(self):
        """Get the final constructed document."""
        return self.builder.get_result()

# Client code
if __name__ == "__main__":
    pdf_builder = PDFDocumentBuilder()
    pdf_director = DocumentDirector(pdf_builder)
    pdf_director.build_document("PDF Document", "This is the content of the PDF document.", "Generated by PDF Document Builder")
    pdf_document = pdf_director.get_document()
    print(pdf_document)

    html_builder = HTMLDocumentBuilder()
    html_director = DocumentDirector(html_builder)
    html_director.build_document("HTML Document", "This is the content of the HTML document.", "Generated by HTML Document Builder")
    html_document = html_director.get_document()
    print(html_document)

    plain_text_builder = PlainTextDocumentBuilder()
    plain_text_director = DocumentDirector(plain_text_builder)
    plain_text_director.build_document("Plain Text Document", "This is the content of the plain text document.", "Generated by Plain Text Document Builder")
    plain_text_document = plain_text_director.get_document()
    print(plain_text_document)
